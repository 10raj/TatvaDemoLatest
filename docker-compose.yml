---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - lm_network
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    expose:
      - '3307'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - lm_network


  eureka-service:
    build: ./LM/eureka_service
    hostname: eureka-service
    ports:
      - '8762:8761'
    networks:
      - lm_network
    expose:
      - '8762'

  user_management_service:
    build: ./LM/user_management_service
    depends_on:
      - eureka-service
      - api_gateway_service
      - db
    environment:
      - spring.datasource.url=jdbc:mysql://db:3306/db?createDatabaseIfNotExist=true
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka

    ports:
      - '9555:9555'
    networks:
      - lm_network

  api_gateway_service:
    build: ./LM/api_gateway_service
    depends_on:
      - eureka-service 
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka
    ports:
      - '9999:9999'
    networks:
      - lm_network
    expose:
      - '9999'



volumes:
  my-db:

networks:
  lm_network: